name: Release

on:
  push:

env:
  RELEASE_REVISION: "pr-${{ github.event.pull_request.number }}-${{ github.event.pull_request.head.sha }}"
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ap-southeast-1
  KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
  KUBE_NAMESPACE: default
  ECR_REPOSITORY: dev-evyd-containers

jobs:
  build:
#    runs-on: self-hosted
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: "~/.cache/bazel"
        key: bazel
#     - run: bazel build //:...

    - run: bazel build //:ProjectRunner
    - name: Prepare Image
      run: |
        mkdir image
        cp Dockerfile image/
        cp bazel-bin/ProjectRunner.jar image/
    
    - name: Configure AWS credentials                          
      uses: aws-actions/configure-aws-credentials@v1           
      with:                                                    
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}        
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1


    - name: Login to Amazon ECR            
      id: login-ecr                        
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # docker build -t evydcontainers.azurecr.io/bazel-java:${{ github.sha }} .
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG


    # - name: Install and configure kubectl
    #   run: |
    #     VERSION=$(curl --silent https://storage.googleapis.com/kubernetes-release/release/stable.txt)
    #     curl https://storage.googleapis.com/kubernetes-release/release/$VERSION/bin/linux/amd64/kubectl \
    #         --progress-bar \
    #         --location \
    #         --remote-name
    #     chmod +x kubectl
    #     sudo mv kubectl /usr/local/bin/
    #     echo ${{ secrets.KUBE_CONFIG_DATA }} | base64 --decode > kubeconfig.yaml

    # - name: deploy to cluster
    #   uses: kodermax/kubectl-aws-eks@master
    #   env:
    #     KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
    #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #     ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
    #     IMAGE_TAG: ${{ github.sha }}
    #   with:
    #     # args: set image deployment/$ECR_REPOSITORY $ECR_REPOSITORY=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG    
    #     args: envsubst < manifests/job.yml | kubectl apply -f - 

    - name: deploy to cluster
      run: envsubst < manifests/job.yml | kubectl apply -f -