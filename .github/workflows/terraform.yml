name: 'Terraform'
 
on:
  push:
    paths:
    - 'Infrastructure/Kubernetes/**'

jobs:
  terraform:
    name: 'Terraform'
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      TF_VAR_client_id: ${{ secrets.TF_VAR_client_id }}
      TF_VAR_client_secret: ${{ secrets.TF_VAR_client_secret }}
      TF_VAR_VM_SSH_KEY_PUB: ${{ secrets.TF_VAR_VM_SSH_KEY_PUB }}

    runs-on: ubuntu-latest
    
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    # defaults:
    #   run:
    #     shell: bash
 
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2
    # - run: ssh-keygen -m PEM -b 4096 -t rsa -f ~/.ssh/id_rsa -q -N ""
    # - run: ls -ltr
    - name: 'Terraform Format'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'fmt'
        tf_actions_working_dir: "./Infrastructure/Kubernetes/"
  

    - name: 'Terraform Init'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'init'
        tf_actions_working_dir: "./Infrastructure/Kubernetes/"

    # - name: import
    #   working-directory: ./Infrastructure/Kubernetes/
    #   run: terraform import azurerm_resource_group.rg /subscriptions/494604d0-3f65-44e8-a639-800587302c01/resourceGroups/azure-k8stest
 
    - name: 'Terraform Validate'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'validate'
        tf_actions_working_dir: "./Infrastructure/Kubernetes/"
         
    - name: 'Terraform Plan'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'plan'
        tf_actions_working_dir: "./Infrastructure/Kubernetes/"


    # - name: Terraform Apply
    #   run: terraform apply -auto-approve


    - name: Terraform Apply
      if: github.ref == 'refs/heads/master'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'apply'
        tf_actions_working_dir: "./Infrastructure/Kubernetes/"

    # - run: cd ./Infrastructure/Kubernetes/
    # - run: echo "$(terraform output -raw kube_config)" > ~/azurek8s; export KUBECONFIG=~/azurek8s
    # - run: wc ~/azurek8s
    # - run: kubectl get nodes
    # - run: kubectl delete deployment java-app
    # - run: kubectl create deployment java-app --image=vishesh.azurecr.io/bazel-java


  # Create image pull secret for ACR
  # - uses: azure/k8s-create-secret@v1
  #   with:
  #     container-registry-url: vishesh.azurecr.io
  #     container-registry-username: ${{ secrets.ACR_USERNAME }}
  #     container-registry-password: ${{ secrets.ACR_PASSWORD }}
  #     secret-name: ${{ env.SECRET }}
  #     namespace: ${{ env.NAMESPACE }}
  #     arguments: --force true